FROM {{ language }}:{{ version }}

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apt-get update && apt-get install -y --no-install-recommends curl {{ additional_system_packages }} && \
    {% if package_manager == "poetry" %}
    curl -sSL https://install.python-poetry.org | python3 - --version {{ package_manager_version }} && \
    ln -s /root/.local/bin/poetry /usr/local/bin/poetry
    {% elif package_manager == "rye" %}
    curl -sSL https://rye-up.com/get | RYE_INSTALL_OPTION="--yes" bash - && \
    /root/.rye/rye self install {{ package_manager_version }} && \
    ln -s /root/.rye/shims/rye /usr/local/bin/rye
    {% elif package_manager == "pip" %}
    python3 -m pip install --upgrade pip=={{ package_manager_version }}
    {% endif %} && \
    apt-get purge -y --auto-remove curl && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

{% if package_manager == "poetry" or package_manager == "rye" %}
COPY pyproject.toml poetry.lock* /app/
{% elif package_manager == "pip" %}
COPY requirements.txt /app/
{% endif %}

{% if package_manager == "poetry" %}
RUN poetry config virtualenvs.create false && poetry install --no-interaction --no-ansi --no-root

{% elif package_manager == "rye" %}
RUN rye sync

{% elif package_manager == "pip" %}
RUN pip install --no-cache-dir -r requirements.txt
{% endif %}

COPY . /app
